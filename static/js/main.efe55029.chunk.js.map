{"version":3,"sources":["assets/noPoster.png","Components/Section.js","Components/Loading.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Image","props","bgUrl","Rating","Year","ImageContainer","withRouter","id","imageUrl","rating","year","isMovie","to","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upcomming","popular","topRated","loading","error","Helmet","Loading","map","movie","index","key","poster_path","vote_average","release_data","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","Component","TVPresenter","airingToday","tv","name","first_air_date","TVContainer","SearchPresenter","movieResults","tvResults","console","log","SearchContainer","searchByTerm","a","match","q","Header","header","List","ul","Item","li","current","Blank","SLink","Link","Form","form","Input","input","Search","FaSearch","Logo","img","value","handleChange","e","target","pathname","location","alt","src","includes","action","placeholder","onChange","onSubmit","preventDefault","Backdrop","bgImage","Content","Cover","Data","h3","InfoContainer","Info","Divider","Overview","p","DetailPresenter","result","backdrop_path","release_date","undefined","runtime","episode_run_time","genres","genre","overview","DetailContainer","goBack","history","parsedId","parseInt","isNaN","exact","path","component","Home","TV","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,sC,2nBCI3C,IAAMC,EAAYC,IAAOC,IAAV,KAOTC,EAAQF,IAAOG,KAAV,KAKLC,EAAOJ,IAAOC,IAAV,KAsBKI,EAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,kBAACR,EAAD,KACE,kBAACG,EAAD,KAAQI,GACR,kBAACF,EAAD,KAAOG,K,yMCvBX,IAAMR,EAAYC,IAAOC,IAAV,KASA,oBAAM,kBAAC,EAAD,a,m8BCPrB,IAAMF,EAAYC,IAAOC,IAAV,KAITO,EAAQR,IAAOC,IAAV,KACe,SAACQ,GAAD,OAAWA,EAAMC,SAQrCC,EAASX,IAAOG,KAAV,KAQND,EAAQF,IAAOG,KAAV,KAKLS,EAAOZ,IAAOG,KAAV,KAKJU,EAAiBb,IAAOC,IAAV,IAIdO,EAGAG,GAwCSG,eAlCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUV,EAAjB,EAAiBA,MAAOW,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,kBAAC,IAAD,CAAMC,GAAID,EAAO,iBAAaJ,GAAb,cAA2BA,IAC1C,kBAAC,EAAD,KACE,kBAACF,EAAD,KACE,kBAACL,EAAD,CACEE,MACEM,EAAQ,yCAC8BA,GAClCK,EAAQ,MAGhB,kBAACV,EAAD,KACE,0BAAMW,KAAK,MAAMC,aAAW,UAA5B,UAEQ,IACPN,EAJH,QAOF,kBAAC,EAAD,KACGX,EAAMkB,OAAS,GAAf,UAAuBlB,EAAMmB,UAAU,EAAG,IAA1C,OAAqDnB,GAExD,kBAACM,EAAD,KAAOM,Q,8FC9Db,IAAMnB,EAAYC,IAAOC,IAAV,KA8FAyB,EA1FO,SAAC,GAAD,IACpBC,EADoB,EACpBA,WACAC,EAFoB,EAEpBA,UACAC,EAHoB,EAGpBA,QACAC,EAJoB,EAIpBA,SAEAC,GANoB,EAKpBC,MALoB,EAMpBD,SANoB,OAQpB,oCACE,kBAACE,EAAA,EAAD,KACE,yDAEDF,EACC,kBAACG,EAAD,MAEA,kBAAC,EAAD,KACGP,GAAcA,EAAWH,OAAS,GACjC,kBAAC,EAAD,CAASlB,MAAM,mCACZqB,EAAWQ,KAAI,SAACC,EAAOC,GAAR,OACd,kBAAC,EAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVT,MAAO8B,EAAM9B,MACbU,SAAUoB,EAAMG,YAChBtB,OAAQmB,EAAMI,aACdtB,KAAMkB,EAAMK,cAAgBL,EAAMK,aAAahB,UAAU,EAAG,GAC5DN,SAAS,QAKhBU,GAAWA,EAAQL,OAAS,GAC3B,kBAAC,EAAD,CAASlB,MAAM,gBACZuB,EAAQM,KAAI,SAACC,EAAOC,GAAR,OACX,kBAAC,EAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVT,MAAO8B,EAAM9B,MACbU,SAAUoB,EAAMG,YAChBtB,OAAQmB,EAAMI,aACdtB,KAAMkB,EAAMK,cAAgBL,EAAMK,aAAahB,UAAU,EAAG,GAC5DN,SAAS,QAKhBW,GAAYA,EAASN,OAAS,GAC7B,kBAAC,EAAD,CAASlB,MAAM,6BACZwB,EAASK,KAAI,SAACC,EAAOC,GAAR,OACZ,kBAAC,EAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVT,MAAO8B,EAAM9B,MACbU,SAAUoB,EAAMG,YAChBtB,OAAQmB,EAAMI,aACdtB,KAAMkB,EAAMK,cAAgBL,EAAMK,aAAahB,UAAU,EAAG,GAC5DN,SAAS,QAKhBS,GAAaA,EAAUJ,OAAS,GAC/B,kBAAC,EAAD,CAASlB,MAAM,6BACZsB,EAAUO,KAAI,SAACC,EAAOC,GAAR,OACb,kBAAC,EAAD,CACEC,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVT,MAAO8B,EAAM9B,MACbU,SAAUoB,EAAMG,YAChBtB,OAAQmB,EAAMI,aACdtB,KAAMkB,EAAMK,cAAgBL,EAAMK,aAAahB,UAAU,EAAG,GAC5DN,SAAS,W,QCjFnBuB,E,OAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EACC,kBAAMP,EAAIQ,IAAJ,sBADPD,EAEA,kBAAMP,EAAIQ,IAAI,mBAFdD,EAGD,kBAAMP,EAAIQ,IAAJ,oBAHLD,EAIF,kBAAMP,EAAIQ,IAAJ,kBAJJD,EAKH,SAAClC,GAAD,OACN2B,EAAIQ,IAAJ,gBAAiBnC,GAAM,CACrB+B,OAAQ,CACNK,mBAAoB,aARfF,EAWH,SAACG,GAAD,OACNV,EAAIQ,IAAJ,gBAAyB,CACvBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OAKrBG,EACD,kBAAMb,EAAIQ,IAAJ,iBADLK,GAEF,kBAAMb,EAAIQ,IAAJ,eAFJK,GAGE,kBAAMb,EAAIQ,IAAJ,oBAHRK,GAIH,SAACxC,GAAD,OACN2B,EAAIQ,IAAJ,aAAcnC,GAAM,CAClB+B,OAAQ,CACNK,mBAAoB,aAPfI,GAUH,SAACH,GAAD,OACNV,EAAIQ,IAAJ,aAAsB,CACpBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OCxCnBI,G,4MCGbC,MAAQ,CACN9B,WAAY,KACZC,UAAW,KACXC,QAAS,KACTC,SAAU,KACVE,MAAO,GACPD,SAAS,G,yNAOGkB,I,uBADStB,E,EAAjB+B,KAAQC,Q,SAIAV,I,uBADSrB,E,EAAjB8B,KAAQC,Q,UAIAV,I,wBADSpB,E,EAAjB6B,KAAQC,Q,UAIAV,I,iBADSnB,E,EAAjB4B,KAAQC,QAGVC,KAAKC,SAAS,CACZlC,aACAC,YACAC,UACAC,a,kDAGF8B,KAAKC,SAAS,CACZ7B,MAAO,4B,yBAGT4B,KAAKC,SAAS,CACZ9B,SAAS,I,kKAML,IAAD,EAQH6B,KAAKH,MANP9B,EAFK,EAELA,WACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,QACAC,EALK,EAKLA,SACAE,EANK,EAMLA,MACAD,EAPK,EAOLA,QAWF,OACE,kBAAC,EAAD,CACEJ,WAAYA,EACZC,UAAWA,EACXC,QAASA,EACTC,SAAUA,EACVE,MAAOA,EACPD,QAASA,Q,GApEY+B,a,gGCI7B,IAAM/D,GAAYC,IAAOC,IAAV,MAoEA8D,GAhEK,SAAC,GAAD,IAAGjC,EAAH,EAAGA,SAAUD,EAAb,EAAaA,QAASmC,EAAtB,EAAsBA,YAAoBjC,GAA1C,EAAmCC,MAAnC,EAA0CD,SAA1C,OAClB,oCACE,kBAACE,EAAA,EAAD,KACE,+CAEDF,EACC,kBAACG,EAAD,MAEA,kBAAC,GAAD,KACG8B,GAAeA,EAAYxC,OAAS,GACnC,kBAAC,EAAD,CAASlB,MAAM,6BACZ0D,EAAY7B,KAAI,SAAC8B,EAAI5B,GAAL,OACf,kBAAC,EAAD,CACEC,IAAK2B,EAAGlD,GACRA,GAAIkD,EAAGlD,GACPT,MAAO2D,EAAGC,KACVlD,SAAUiD,EAAG1B,YACbtB,OAAQgD,EAAGzB,aACXtB,KAAM+C,EAAGE,gBAAkBF,EAAGE,eAAe1C,UAAU,EAAG,SAKjEI,GAAWA,EAAQL,OAAS,GAC3B,kBAAC,EAAD,CAASlB,MAAM,gBACZuB,EAAQM,KAAI,SAAC8B,EAAI5B,GAAL,OACX,kBAAC,EAAD,CACEC,IAAK2B,EAAGlD,GACRA,GAAIkD,EAAGlD,GACPT,MAAO2D,EAAGC,KACVlD,SAAUiD,EAAG1B,YACbtB,OAAQgD,EAAGzB,aACXtB,KAAM+C,EAAGE,gBAAkBF,EAAGE,eAAe1C,UAAU,EAAG,SAKjEK,GAAYA,EAASN,OAAS,GAC7B,kBAAC,EAAD,CAASlB,MAAM,6BACZwB,EAASK,KAAI,SAAC8B,EAAI5B,GAAL,OACZ,kBAAC,EAAD,CACEC,IAAK2B,EAAGlD,GACRA,GAAIkD,EAAGlD,GACPT,MAAO2D,EAAGC,KACVlD,SAAUiD,EAAG1B,YACbtB,OAAQgD,EAAGzB,aACXtB,KAAM+C,EAAGE,gBAAkBF,EAAGE,eAAe1C,UAAU,EAAG,YCxD3D2C,G,4MCGbX,MAAQ,CACN3B,SAAU,KACVD,QAAS,KACTmC,YAAa,KACbhC,MAAO,GACPD,SAAS,G,qNAOGwB,I,uBADSzB,E,EAAjB4B,KAAQC,Q,SAIAJ,K,uBADS1B,E,EAAjB6B,KAAQC,Q,UAIAJ,K,iBADSS,E,EAAjBN,KAAQC,QAGVC,KAAKC,SAAS,CACZ/B,WACAD,UACAmC,gB,kDAGFJ,KAAKC,SAAS,CACZ7B,MAAO,8B,yBAGT4B,KAAKC,SAAS,CACZ9B,SAAS,I,kKAML,IAAD,EACoD6B,KAAKH,MAAxD3B,EADD,EACCA,SAAUD,EADX,EACWA,QAASmC,EADpB,EACoBA,YAAahC,EADjC,EACiCA,MAAOD,EADxC,EACwCA,QAQ/C,OACE,kBAAC,GAAD,CACED,SAAUA,EACVD,QAASA,EACTmC,YAAaA,EACbhC,MAAOA,EACPD,QAASA,Q,GArDY+B,a,gGCI7B,IAAM/D,GAAYC,IAAOC,IAAV,MA2DAoE,GAvDS,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,UAAWnB,EAA5B,EAA4BA,KAAMrB,EAAlC,EAAkCA,QAAlC,EAA2CC,MAA3C,OACtB,oCACE,kBAACC,EAAA,EAAD,KACE,oDAEDF,EACC,kBAACG,EAAD,MAEA,kBAAC,GAAD,KACE,kBAACD,EAAA,EAAD,KACGuC,QAAQC,IAAIrB,GACb,+BAAQA,GAAc,eAAtB,cAEF,kBAAC,EAAD,CAAS9C,MAAM,gBACZgE,GACCA,EAAa9C,OAAS,GACtB8C,EAAanC,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CACEE,IAAKF,EAAMrB,GACXA,GAAIqB,EAAMrB,GACVT,MAAO8B,EAAM9B,MACbU,SAAUoB,EAAMG,YAChBtB,OAAQmB,EAAMI,aACdtB,KAAMkB,EAAMK,cAAgBL,EAAMK,aAAahB,UAAU,EAAG,GAC5DN,SAAS,QAIjB,kBAAC,EAAD,CAASb,MAAM,+BACZiE,GACCA,EAAU/C,OAAS,GACnB+C,EAAUpC,KAAI,SAAC8B,GAAD,OACZ,kBAAC,EAAD,CACE3B,IAAK2B,EAAGlD,GACRA,GAAIkD,EAAGlD,GACPT,MAAO2D,EAAGC,KACVlD,SAAUiD,EAAG1B,YACbtB,OAAQgD,EAAGzB,aACXtB,KAAM+C,EAAGE,gBAAkBF,EAAGE,eAAe1C,UAAU,EAAG,YChD3DiD,G,4MCGbjB,MAAQ,CACNa,aAAc,KACdC,UAAW,KACXnB,KAAM,GACNrB,SAAS,EACTC,MAAO,I,EAeT2C,a,uCAAe,WAAOvB,GAAP,qBAAAwB,EAAA,+EAID3B,EAAiBG,GAJhB,uBAGQkB,EAHR,EAGTZ,KAAQC,QAHC,SAODJ,GAAaH,GAPZ,gBAMQmB,EANR,EAMTb,KAAQC,QAGV,EAAKE,SAAS,CACZS,eACAC,cAXS,kDAcX,EAAKV,SAAS,CAAE7B,MAAM,EAAD,KAdV,yBAgBX,EAAK6B,SAAS,CACZ9B,SAAS,IAjBA,6E,wHAZM,IAGFqB,EAEbQ,KAAKnD,MAHPoE,MACE/B,OAAUgC,EAGD,KAAT1B,IACFQ,KAAKC,SAAS,CAAET,SAChBQ,KAAKe,aAAavB,M,+BA0BZ,IAAD,EACmDQ,KAAKH,MAAvDa,EADD,EACCA,aAAcC,EADf,EACeA,UAAWnB,EAD1B,EAC0BA,KAAMrB,EADhC,EACgCA,QAASC,EADzC,EACyCA,MAEhD,OACE,kBAAC,GAAD,CACEsC,aAAcA,EACdC,UAAWA,EACXnB,KAAMA,EACNrB,QAASA,EACTC,MAAOA,Q,GApDc8B,a,qpDCC7B,IAAMiB,GAAS/E,IAAOgF,OAAV,MAcNC,GAAOjF,IAAOkF,GAAV,MAKJC,GAAOnF,IAAOoF,GAAV,MAGmB,SAAC3E,GAAD,OAAYA,EAAM4E,QAAU,MAAQ,iBAK3DC,GAAQtF,IAAOC,IAAV,MAILsF,GAAQvF,YAAOwF,IAAPxF,CAAH,MAcLyF,GAAOzF,IAAO0F,KAAV,MAUJC,GAAQ3F,IAAO4F,MAAV,MASLC,GAAS7F,YAAO8F,KAAP9F,CAAH,MAMN+F,GAAO/F,IAAOgG,IAAV,MAKKlF,eAAU,4MAErB2C,MAAQ,CAAEwC,MAAO,IAFI,EAGrBC,aAAe,SAACC,GAAO,IAETF,EACRE,EADFC,OAAUH,MAEZ,EAAKpC,SAAS,CAAEoC,WAPG,uDAUX,IAEMI,EACVzC,KAAKnD,MADP6F,SAAYD,SAENJ,EAAUrC,KAAKH,MAAfwC,MACR,OACE,kBAAClB,GAAD,KACE,kBAACE,GAAD,KACE,kBAACE,GAAD,KACE,kBAACI,GAAD,CAAOnE,GAAG,KACR,kBAAC2E,GAAD,CACEQ,IAAI,OACJC,IAAI,0EAIV,kBAACrB,GAAD,CAAME,QAASgB,EAASI,SAAS,WAC/B,kBAAClB,GAAD,CAAOnE,GAAG,UAAV,iBAEF,kBAAC+D,GAAD,CAAME,QAASgB,EAASI,SAAS,QAC/B,kBAAClB,GAAD,CAAOnE,GAAG,OAAV,gCAEF,kBAACkE,GAAD,MACA,kBAACG,GAAD,CAAMiB,OAAM,iBAAYT,EAAK,WAAOA,GAAU,KAC5C,kBAACN,GAAD,CACEgB,YAAY,2DACZC,SAAUhD,KAAKsC,aACfW,SAAU,SAACV,GAAD,OAAOA,EAAEW,oBAErB,kBAACvB,GAAD,CAAOnE,GAAE,iBAAY6E,EAAK,WAAOA,GAAU,KACzC,kBAAC,GAAD,cAxCS,GACTnC,c,u8CC3EhB,IAAM/D,GAAYC,IAAOC,IAAV,MAOT8G,GAAW/G,IAAOC,IAAV,MAMY,SAACQ,GAAD,OAAWA,EAAMuG,WAQrCC,GAAUjH,IAAOC,IAAV,MAQPiH,GAAQlH,IAAOC,IAAV,MAEe,SAACQ,GAAD,OAAWA,EAAMuG,WAOrCG,GAAOnH,IAAOC,IAAV,MAKJC,GAAQF,IAAOoH,GAAV,MAKLC,GAAgBrH,IAAOC,IAAV,MAIbqH,GAAOtH,IAAOG,KAAV,MAEJoH,GAAUvH,IAAOG,KAAV,MAIPqH,GAAWxH,IAAOyH,EAAV,MAoECC,GA7DS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,EAAW3F,MAAX,SAAkBD,QAEtC,oCACE,kBAACE,EAAA,EAAD,KACE,oDAEF,kBAACC,EAAD,OAGF,kBAAC,GAAD,KACE,kBAACD,EAAA,EAAD,KACE,+BAAQ0F,EAAOrH,MAAQqH,EAAOrH,MAAQqH,EAAOzD,KAA7C,cAEF,kBAAC6C,GAAD,CACEC,QAAO,6CAAwCW,EAAOC,iBAExD,kBAACX,GAAD,KACE,kBAACC,GAAD,CACEF,QACEW,EAAOpF,YAAP,6CAC0CoF,EAAOpF,aAC7ClB,EAAQ,MAGhB,kBAAC8F,GAAD,KACE,kBAAC,GAAD,KAAQQ,EAAOrH,MAAQqH,EAAOrH,MAAQqH,EAAOzD,MAC7C,kBAACmD,GAAD,KACE,kBAACC,GAAD,KACGK,EAAOE,aACJF,EAAOE,aAAapG,UAAU,EAAG,GACjCkG,EAAOxD,eAAe1C,UAAU,EAAG,IAEzC,kBAAC8F,GAAD,eACA,kBAACD,GAAD,UACsBQ,IAAnBH,EAAOI,QACJJ,EAAOI,QACPJ,EAAOK,iBAAiB,GAAI,IAHlC,UAMA,kBAACT,GAAD,eACA,kBAACD,GAAD,KACGK,EAAOM,QACNN,EAAOM,OAAO9F,KAAI,SAAC+F,EAAO7F,GAAR,OAChBA,IAAUsF,EAAOM,OAAOzG,OAAS,EAC7B0G,EAAMhE,KADV,UAEOgE,EAAMhE,KAFb,YAMR,kBAACsD,GAAD,KAAWG,EAAOQ,cCtHbC,G,4MCGb3E,MAAQ,CACNkE,OAAQ,KACR3F,MAAO,GACPD,SAAS,G,qMAUL6B,KAAKnD,MAJKM,E,EADZ8D,MACE/B,OAAU/B,GAEDsH,E,EAAXC,QAAWD,OACChC,E,EAAZC,SAAYD,SAGdzC,KAAKzC,QAAUkF,EAASI,SAAS,WAC3B8B,EAAWC,SAASzH,GACtB0H,MAAMF,IACRF,IAGEV,EAAS,K,UAEP/D,KAAKzC,Q,iCACmB8B,EAAiBsF,G,gBAAlCZ,E,EAANjE,K,yCAEuBH,GAAagF,G,iBAA9BZ,E,EAANjE,K,0DAGLE,KAAKC,SAAS,CACZ7B,MAAO,4B,yBAGT4B,KAAKC,SAAS,CACZ9B,SAAS,EACT4F,W,qBAGJnD,QAAQC,IAAI,wB,qJAIZD,QAAQC,IAAIb,KAAKnD,OADV,MAE4BmD,KAAKH,MAAhCkE,EAFD,EAECA,OAAQ3F,EAFT,EAESA,MAAOD,EAFhB,EAEgBA,QAEvB,OAAO,kBAAC,GAAD,CAAiB4F,OAAQA,EAAQ3F,MAAOA,EAAOD,QAASA,Q,GA9CtC+B,aCSd,qBACb,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,SAASC,UAAWC,KACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,MAAMC,UAAWE,KACnC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,aAAaC,UAAW/C,KAC1C,kBAAC,IAAD,CAAO8C,KAAK,aAAaC,UAAWG,KACpC,kBAAC,IAAD,CAAOJ,KAAK,UAAUC,UAAWG,KACjC,kBAAC,IAAD,CAAUC,KAAK,IAAI5H,GAAG,c,ufCnB5B,IAkBe6H,GAlBMC,YAAH,KACZC,MCWSC,G,uKATX,OACE,oCACE,kBAACC,GAAD,MACA,kBAACC,GAAD,W,GALUxF,aCAlByF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.efe55029.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.ac249eb0.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 10px;\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14pt;\n  font-weight: bold;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.objectOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 50pt;\n  margin-top: 20px;\n`;\n\nexport default () => <Container>...</Container>;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 11 ? `${title.substring(0, 11)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n};\r\n\r\nexport default withRouter(Poster);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 50px 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n  nowPlaying,\r\n  upcomming,\r\n  popular,\r\n  topRated,\r\n  error,\r\n  loading,\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>영화 | Myflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"현재 상영중\">\r\n            {nowPlaying.map((movie, index) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_data && movie.release_data.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기\">\r\n            {popular.map((movie, index) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_data && movie.release_data.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"높은 평점\">\r\n            {topRated.map((movie, index) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_data && movie.release_data.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcomming && upcomming.length > 0 && (\r\n          <Section title=\"개봉 예정\">\r\n            {upcomming.map((movie, index) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_data && movie.release_data.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcomming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6d111d60c29d38c8fc83c795e61e7e94\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(`movie/now_playing`),\n  upcomming: () => api.get(\"movie/upcoming\"),\n  topRated: () => api.get(`movie/top_rated`),\n  popular: () => api.get(`movie/popular`),\n  detail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(`/search/movie`, {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(`tv/top_rated`),\n  popular: () => api.get(`tv/popular`),\n  airingToday: () => api.get(`tv/airing_today`),\n  detail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(`/search/tv`, {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { Component } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    nowPlaying: null,\n    upcomming: null,\n    popular: null,\n    topRated: null,\n    error: \"\",\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcomming },\n      } = await moviesApi.upcomming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      const {\n        data: { results: topRated },\n      } = await moviesApi.topRated();\n\n      this.setState({\n        nowPlaying,\n        upcomming,\n        popular,\n        topRated,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't fine Movies data.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n    //console.log(\"This is Movie(Home) Part.\");\n  }\n\n  render() {\n    const {\n      nowPlaying,\n      upcomming,\n      popular,\n      topRated,\n      error,\n      loading,\n    } = this.state;\n    // console.log(\"I'm rendering\");\n    // console.log(\n    //   typeof nowPlaying,\n    //   typeof upcomming,\n    //   typeof popular,\n    //   typeof topRated,\n    //   typeof error,\n    //   typeof loading\n    // );\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcomming={upcomming}\n        popular={popular}\n        topRated={topRated}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 50px 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | Myfilx</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <Container>\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"오늘 방영\">\r\n            {airingToday.map((tv, index) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"인기\">\r\n            {popular.map((tv, index) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"높은 평점\">\r\n            {topRated.map((tv, index) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { Component } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: \"\",\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV Shows data.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n      // console.log(\"This is TV Part.\");\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    // console.log(\n    // typeof topRated,\n    // typeof popular,\n    // typeof airingToday,\n    // typeof error,\n    // typeof loading\n    // );\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../../Components/Loading\";\r\nimport Section from \"../../Components/Section\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 50px 20px;\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, term, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Loading | Myfilx</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          {console.log(term)}\r\n          <title>{term ? term : \"검색\"} | Myfilx</title>\r\n        </Helmet>\r\n        <Section title=\"영화\">\r\n          {movieResults &&\r\n            movieResults.length > 0 &&\r\n            movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_data && movie.release_data.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n        </Section>\r\n        <Section title=\"TV 프로그램\">\r\n          {tvResults &&\r\n            tvResults.length > 0 &&\r\n            tvResults.map((tv) => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n        </Section>\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  term: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { Component } from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    term: \"\",\r\n    loading: true,\r\n    error: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { q: term },\r\n      },\r\n    } = this.props;\r\n    if (term !== \"\") {\r\n      this.setState({ term });\r\n      this.searchByTerm(term);\r\n    }\r\n  }\r\n\r\n  searchByTerm = async (term) => {\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(term);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(term);\r\n\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch (e) {\r\n      this.setState({ error: e });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, term, loading, error } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        term={term}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 70px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto);\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 90px;\r\n  height: 70px;\r\n  border-bottom: 3px solid ${(props) => (props.current ? \"red\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Blank = styled.div`\r\n  flex: auto;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 70px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  :not(:first-child) {\r\n    &:hover {\r\n      opacity: 0.6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  background-color: white;\r\n  height: 40px;\r\n  width: 350px;\r\n  align-items: center;\r\n  border-radius: 20px;\r\n  margin-right: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  flex: auto;\r\n  margin-left: 20px;\r\n  height: 60%;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Search = styled(FaSearch)`\r\n  color: rgba(20, 20, 20, 0.8);\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 60px;\r\n  height: 40px;\r\n`;\r\n\r\nexport default withRouter(\r\n  class extends Component {\r\n    state = { value: \"\" };\r\n    handleChange = (e) => {\r\n      const {\r\n        target: { value },\r\n      } = e;\r\n      this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n      const {\r\n        location: { pathname },\r\n      } = this.props;\r\n      const { value } = this.state;\r\n      return (\r\n        <Header>\r\n          <List>\r\n            <Item>\r\n              <SLink to=\"/\">\r\n                <Logo\r\n                  alt=\"icon\"\r\n                  src=\"https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg\"\r\n                />\r\n              </SLink>\r\n            </Item>\r\n            <Item current={pathname.includes(\"/movie\")}>\r\n              <SLink to=\"/movie\">영화</SLink>\r\n            </Item>\r\n            <Item current={pathname.includes(\"/tv\")}>\r\n              <SLink to=\"/tv\">TV 프로그램</SLink>\r\n            </Item>\r\n            <Blank />\r\n            <Form action={`/search${value ? `/${value}` : \"\"}`}>\r\n              <Input\r\n                placeholder=\"검색어를 입력하시오.\"\r\n                onChange={this.handleChange}\r\n                onSubmit={(e) => e.preventDefault()}\r\n              />\r\n              <SLink to={`/search${value ? `/${value}` : \"\"}`}>\r\n                <Search />\r\n              </SLink>\r\n            </Form>\r\n          </List>\r\n        </Header>\r\n      );\r\n    }\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loading from \"../../Components/Loading\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 70px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Info = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 70%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Myfilx</title>\r\n      </Helmet>\r\n      <Loading />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.title ? result.title : result.name} | Myfilx</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.title ? result.title : result.name}</Title>\r\n          <InfoContainer>\r\n            <Info>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Info>\r\n            <Divider>•</Divider>\r\n            <Info>\r\n              {result.runtime !== undefined\r\n                ? result.runtime\r\n                : result.episode_run_time[0]}{\" \"}\r\n              분\r\n            </Info>\r\n            <Divider>•</Divider>\r\n            <Info>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Info>\r\n          </InfoContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React, { Component } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    result: null,\n    error: \"\",\n    loading: true,\n  };\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { goBack },\n      location: { pathname },\n    } = this.props;\n\n    this.isMovie = pathname.includes(\"/movie/\");\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      goBack();\n    }\n\n    let result = null;\n    try {\n      if (this.isMovie) {\n        ({ data: result } = await moviesApi.detail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.detail(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find detail data.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result,\n      });\n    }\n    console.log(\"This is Detail Part.\");\n  }\n\n  render() {\n    console.log(this.props);\n    const { result, error, loading } = this.state;\n    // console.log(typeof result, typeof error, typeof loading);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <Header />\r\n    <Switch>\r\n      <Route exact path=\"/movie\" component={Home} />\r\n      <Route exact path=\"/tv\" component={TV} />\r\n      <Route exact path=\"/search/:q\" component={Search} />\r\n      <Route path=\"/movie/:id\" component={Detail} />\r\n      <Route path=\"/tv/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/movie\" />\r\n    </Switch>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 70px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}